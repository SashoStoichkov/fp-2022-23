#lang racket

; задачки (`'тук` трябва да попълните):
; зад 1
; No | Преведете следните аритметични изрази на scheme: | пресмятат се до:
;---|--------------------------------------------------|-------------------
; 1 | (10 + 5.16 + 19 + 9.712361) * (20 - (16 - 4))    | 350.97888
; 2 | 1/4 + 2/5 + 3/8 + 6 * (5.1 - 1.6) * (9/3 - 7/4)  | 27.274999999999995
; 3 | 3^(60 ÷ 7) + ((2^10) ÷ 179)                      | 6566
; 4 | (1 - i)^21                                       | колко е?

; зад 1
; № | Преведете следните аритметични изрази на scheme: | пресмятат се до:
;---|--------------------------------------------------|-------------------
; 1 | (10 + 5.16 + 19 + 9.712361) * (20 - (16 - 4))    | 350.97888
; 2 | 1/4 + 2/5 + 3/8 + 6 * (5.1 - 1.6) * (9/3 - 7/4)  | 27.274999999999995
; 3 | 3^(60 ÷ 7) + ((2^10) ÷ 179)                      | 6566
; 4 | (1 - i)^21                                       | колко е?

(define calc1
  (* (+ 10 5.16 19 9.712361) (- 20 (- 16 4))))
(define calc2
  (+ 1/4 2/5 3/8 (* 6 (- 5.1 1.6) (- 9/3 7/4))))
(define calc3
  (+ (expt 3 (quotient 60 7)) (quotient (expt 2 10) 179)))
(define calc4
  (expt (- 1 (sqrt -1)) 21)) ; изчислява се до `-1024 + 1024i`

; зад 2
(define (odd? n) ; нечетно
  (= 1 (remainder n 2)))
(define (even? n) ; четно
  (= 0 (remainder n 2)))

; зад 3
; схемата за оценяване
(define (grade points)
  (cond
    ((< points 60) 2)
    ((< points 100) 3)
    ((< points 140) 4)
    ((< points 180) 5)
    (else 6)))

; бонус точка ако направите оценката да е наредена двойка от число и думичка
(define (grade-pair points)
  (cond
    ((< points 60)  (cons 2 'Слаб))
    ((< points 100) (cons 3 'Среден))
    ((< points 140) (cons 4 'Добър))
    ((< points 180) (cons 5 'Много_добър))
    (else (cons 6 'Отличен))))
